library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
getwd()
cd ..
MSstatsShiny::launch_MSstatsShiny()
?MSstatsShiny
library(MSstatsShiny)
?MSstatsShiny
MSstatsShiny::lf_summarization_loop()
?ggplot
devtools::document()
?MSstats::DIAUmpiretoMSstatsFormat
library(MSstatsShiny)
data(example_dia_skyline)
example_dia_skyline
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(MSstatsShiny)
library(MSstats)
?MSstats::DIAUmpiretoMSstatsFormat
diau_frag = system.file("tinytest/raw_data/DIAUmpire/dia_frag.csv",
package = "MSstatsConvert")
diau_pept = system.file("tinytest/raw_data/DIAUmpire/dia_pept.csv",
package = "MSstatsConvert")
diau_prot = system.file("tinytest/raw_data/DIAUmpire/dia_prot.csv",
package = "MSstatsConvert")
annot = system.file("tinytest/annotations/annot_diau.csv",
package = "MSstats")
diau_frag = data.table::fread(diau_frag)
diau_pept = data.table::fread(diau_pept)
diau_prot = data.table::fread(diau_prot)
annot = data.table::fread(annot)
diau_frag = diau_frag[, lapply(.SD, function(x) if (is.integer(x)) as.numeric(x) else x)]
# In case numeric columns are not interpreted correctly
diau_imported = DIAUmpiretoMSstatsFormat(diau_frag, diau_pept, diau_prot,
annot, use_log_file = FALSE)
head(diau_imported)
MSstats::dataProcess(diau_imported)
test = MSstats::dataProcess(diau_imported)
test$FeatureLevelData
head(test$FeatureLevelData)
head(test$ProteinLevelData)
head(test$ProteinLevelData)
?scpdata
library(scpdata)
?scpdata
scpdata()
data = scpdata()
data$title
nrow(data)
BiocManager::install("scpdata")
library(scpdata)
scpdata()
data=scpdata()
nrow(data)
BiocManager::install("BiocStyle")
BiocManager::install("BiocStyle")
BiocManager::install("BiocStyle")
BiocManager::install("BiocStyle")
BiocStyle::latex2(relative.path = TRUE)
BiocManager::install("BiocStyle")
BiocStyle::latex2(relative.path = TRUE)
unlink("vignettes/MSstatsShiny_Launch_Instructions_cache", recursive = TRUE)
BiocStyle::latex(relative.path = TRUE)
knit_with_parameters("~/R_Packages/MSstatsShiny/vignettes/MSstatsShiny_Launch_Instructions.Rmd")
?knit_with_parameters
39-12
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
?copy
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
?quantification
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
MSstatsShiny::launch_MSstatsShiny()
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
MSstatsShiny::launch_MSstatsShiny()
tags$iframe
?tags
?iframe
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
MSstatsShiny::launch_MSstatsShiny()
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
library(MSstatsShiny)
MSstatsShiny::launch_MSstatsShiny()
library(MSstatsShiny)
setwd("~/R_Packages/MSstatsShiny/inst/MSstatsShiny")
library(shiny)
runApp(0)
runApp()
remove.packages("MSstatsShiny")
BiocManager::install("MSstatsShiny")
library(MSstatsShiny)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MSstatsShiny")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("MSstatsShiny")
library(MSstatsShiny)
runApp(0)
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
?pdf
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
remove.packages("MSstatsShiny")
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
write.csv("blah")
library(MSstatsShiny)
launch_MSstatsShiny()
remove.packages("MSstatsShiny")
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
?MSstatsTMT::groupComparisonTMT
?MSstats::groupComparison
?MSstats::groupComparisonPlots
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
tempdir()
as.character(UUIDgenerate(FALSE))
id1 = as.character(UUIDgenerate(FALSE))
id_address1 = paste("tmp/",id1, sep = "")
id_address1
path1 = function() {
if (saveFile1) {
path1_id = paste("www/", id_address1, sep = "")
}
else {
path1_id = FALSE
}
return(path1_id)
}
path1()
saveFile1=TRUE
path1()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
tempdir()
paste(tempdir(), "\\")
paste0(tempdir(), "\\")
library(MSstatsShiny)
launch_MSstatsShiny()
id1 = as.character(UUIDgenerate(FALSE))
id_address1 = paste("tmp/",id1, sep = "")  id1 = as.character(UUIDgenerate(FALSE))
id_address1 = paste("tmp/",id1, sep = "")
id_address1
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
setwd("~/R_Packages/MSstatsShiny/inst/MSstatsShiny")
setwd("~/R_Packages/MSstatsShiny/inst/MSstatsShiny")
launch_MSstatsShiny()
setwd("~/R_Packages/MSstatsShiny")
library(MSstatsShiny)
launch_MSstatsShiny()
library(MSstatsShiny)
launch_MSstatsShiny()
setwd("~/R_Packages/MSstatsShiny/inst/MSstatsShiny")
library(shiny)
runApp()
library(shiny)
runApp()
